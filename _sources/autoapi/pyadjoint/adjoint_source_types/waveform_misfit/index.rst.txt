:py:mod:`pyadjoint.adjoint_source_types.waveform_misfit`
========================================================

.. py:module:: pyadjoint.adjoint_source_types.waveform_misfit

.. autoapi-nested-parse::

   Simple waveform misfit and adjoint source.

   .. note::
       This file serves as the template for generation of new adjoint sources.
       Copy-paste file and adjust name, description and underlying calculation
       function to generate new adjoint source.

   :authors:
       adjTomo Dev Team (adjtomo@gmail.com), 2023
       Yanhua O. Yuan (yanhuay@princeton.edu), 2017
       Lion Krischer (krischer@geophysik.uni-muenchen.de), 2015
   :license:
       BSD 3-Clause ("BSD New" or "BSD Simplified")



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pyadjoint.adjoint_source_types.waveform_misfit.calculate_adjoint_source



.. py:function:: calculate_adjoint_source(observed, synthetic, config, windows, choice='waveform', observed_2=None, synthetic_2=None, windows_2=None)

   Calculate adjoint source for the waveform-based misfit measurements.

   :type observed: obspy.core.trace.Trace
   :param observed: observed waveform to calculate adjoint source
   :type synthetic:  obspy.core.trace.Trace
   :param synthetic: synthetic waveform to calculate adjoint source
   :type config: pyadjoint.config.ConfigWaveform
   :param config: Config class with parameters to control processing
   :type windows: list of tuples
   :param windows: [(left, right),...] representing left and right window
       borders to be tapered in units of seconds since first sample in data
       array
   :type choice: str
   :param choice: Flag to turn on station pair calculations. Requires
       `observed_2`, `synthetic_2`, `windows_2`. Available:

       - 'double_difference': Double difference waveform misfit from [Yuan2016]_
       - 'convolution': Waveform convolution misfit from [Choi2011]_
   :type observed_2: obspy.core.trace.Trace
   :param observed_2: second observed waveform to calculate adjoint sources
       from station pairs
   :type synthetic_2:  obspy.core.trace.Trace
   :param synthetic_2: second synthetic waveform to calculate adjoint sources
       from station pairs
   :type windows_2: list of tuples
   :param windows_2: [(left, right),...] representing left and right window
       borders to be tapered in units of seconds since first sample in data
       array. Used to window `observed_2` and `synthetic_2`


