===============
Waveform Misfit
===============

This is the simplest of all misfits and is defined as the squared difference
between observed and synthetic data. The misfit :math:`\chi(\mathbf{m})` for a
given Earth model :math:`\mathbf{m}` and a single receiver and component is
given by

.. math::

    \chi (\mathbf{m}) = \frac{1}{2} \int_0^T \left| \mathbf{d}(t) -
    \mathbf{s}(t, \mathbf{m}) \right| ^ 2 dt

:math:`\mathbf{d}(t)` is the observed data and
:math:`\mathbf{s}(t, \mathbf{m})` the synthetic data.

The adjoint source for the same receiver and component is given by

.. math::

    f^{\dagger}(t) = - \left[ \mathbf{d}(T - t) -
    \mathbf{s}(T - t, \mathbf{m}) \right]

For the sake of simplicity we omit the spatial Kronecker delta and define
the adjoint source as acting solely at the receiver's location. For more
details, please see [Tromp2005]_ and [Bozdag2011]_.

This particular implementation here uses
`Simpson's rule <http://en.wikipedia.org/wiki/Simpson's_rule>`_
to evaluate the definite integral.


Additional Parameters
---------------------

Additional parameters in addition to the default ones in the central
:func:`~pyadjoint.adjoint_source.calculate_adjoint_source` function:


**taper_percentage** (:class:`float`)
    Decimal percentage of taper at one end (ranging from ``0.0`` (0%) to
    ``0.5`` (50%)). Defaults to ``0.15``.

**taper_type** (:class:`str`)
    The taper type, supports anything :method:`obspy.core.trace.Trace.taper`
    can use. Defaults to ``"hann"``.


Usage
-----

.. doctest::

    >>> import pyadjoint
    >>> obs, syn = pyadjoint.utils.get_example_data()
    >>> obs = obs.select(component="Z")[0]
    >>> syn = syn.select(component="Z")[0]
    >>> start, end = pyadjoint.utils.EXAMPLE_DATA_PDIFF
    >>> adj_src = pyadjoint.calculate_adjoint_source(
    ...     adj_src_type="waveform_misfit", observed=obs, synthetic=syn,
    ...     min_period=20.0, max_period=100.0, left_window_border=start,
    ...     right_window_border=end)
    >>> print(adj_src)
    Waveform Misfit Adjoint Source for component Z at station SY.DBO
        Misfit: 4.26e-11
        Adjoint source available with 3600 samples

Example Plots
-------------

The following shows plots of the :doc:`../example_dataset` for some phases.

Pdif Phase on Vertical Component
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This example contains *Pdif* and some surface reflected diffracted phases
recorded on the vertical component.

.. plot::

    import pyadjoint
    import matplotlib.pylab as plt
    fig = plt.figure(figsize=(12, 7))
    obs, syn = pyadjoint.utils.get_example_data()
    obs = obs.select(component="Z")[0]
    syn = syn.select(component="Z")[0]
    start, end = pyadjoint.utils.EXAMPLE_DATA_PDIFF
    pyadjoint.calculate_adjoint_source("waveform_misfit", obs, syn, 20.0, 100.0,
                                       start, end, adjoint_src=True, plot=fig)
    plt.show()


Sdif Phase on Transverse Component
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This example contains *Sdif* and some surface reflected diffracted phases
recorded on the transverse component.

.. plot::

    import pyadjoint
    import matplotlib.pylab as plt
    fig = plt.figure(figsize=(12, 7))
    obs, syn = pyadjoint.utils.get_example_data()
    obs = obs.select(component="T")[0]
    syn = syn.select(component="T")[0]
    start, end = pyadjoint.utils.EXAMPLE_DATA_SDIFF
    pyadjoint.calculate_adjoint_source("waveform_misfit", obs, syn, 20.0, 100.0,
                                       start, end, adjoint_src=True, plot=fig)
    plt.show()
